version: '3.2'
services:
  web:
    image: ${DOCKER_REPO}:${TIMESTAMP}
    volumes:
      - /var/nfs/props/staging/assets:/app/public/assets
      - /var/nfs/props/staging/log:/app/log
    hostname: "netguru.props.staging.web"
    labels:
      - "netguru.appname=props"
      - "netguru.stage=staging"
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == worker]
      labels:
        - "traefik.frontend.rule=HostRegexp: ${VIRTUAL_HOST}, {subdomain:[a-z]+}.${VIRTUAL_HOST}"
        - "traefik.port=3000"
        - "traefik.docker.network=swarm"
      resources:
        limits:
          cpus: "0.25"
          memory: 800M
    env_file: /home/deploy/apps/props/shared/secrets.env
    networks:
      - swarm
    command: dumb-init puma -C config/puma.rb

  sidekiq:
    image: ${DOCKER_REPO}:${TIMESTAMP}
    volumes:
      - /var/nfs/props/staging/assets:/app/public/assets
      - /var/nfs/props/staging/log:/app/log
    hostname: "netguru.props.staging.sidekiq"
    labels:
      - "netguru.appname=props"
      - "netguru.stage=staging"
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == worker]
      resources:
        limits:
          cpus: "0.25"
          memory: 800M
    env_file: /home/deploy/apps/props/shared/secrets.env
    networks:
      - swarm
    command: dumb-init bash -c "bundle exec sidekiq --config ./config/sidekiq.staging.yml | tee -a log/staging.sidekiq.log"

  crono:
    image: ${DOCKER_REPO}:${TIMESTAMP}
    volumes:
      - /var/nfs/props/staging/assets:/app/public/assets
      - /var/nfs/props/staging/log:/app/log
    hostname: "netguru.props.staging.crono"
    labels:
      - "netguru.appname=props"
      - "netguru.stage=staging"
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == worker]
      resources:
        limits:
          cpus: "0.25"
          memory: 800M
    env_file: /home/deploy/apps/props/shared/secrets.env
    networks:
      - swarm
    command: dumb-init bash -c "bundle exec crono -L log/staging.crono.log run | tail -f log/staging.crono.log"

networks:
  swarm:
    external:
      name: swarm
