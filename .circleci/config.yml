defaults: &defaults
  working_directory: ~/props
  docker:
    - image: circleci/ruby:2.3-node
      environment:
        - RAILS_ENV=test
    - image: circleci/postgres:latest
      environment:
        - POSTGRES_USER=props

version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/props
      - restore-cache:
          key: node-{{ checksum "yarn.lock"}}
      - run: yarn
      - save_cache:
          key: node-{{ checksum "yarn.lock"}}
          paths:
            - node_modules
      - restore_cache:
          key: ruby-{{ checksum "Gemfile.lock" }}
      - run: bundle install --jobs=4 --retry=3 --path vendor/bundle --without development
      - save-cache:
          key: ruby-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - persist_to_workspace:
          root: .
          paths:
            - vendor/bundle
            - node_modules
  run_tests:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/props
      - run: bundle --path vendor/bundle --without development
      - run: cp config/database.yml.sample config/database.yml
      - run: bundle exec rake db:create db:schema:load --trace
      - run: bundle exec rake db:migrate
      - run: yarn test
      - run: bundle exec rspec --colour --profile 10 --order rand spec --format progress
      - deploy:
          name: Deploy To Staging
          command: |
            if [ "${CIRCLE_BRANCH}" == "mobile" ]; then
              git push git@heroku.com:netguru-props-staging.git
            fi
      - deploy:
          name: "Deploy to production"
          command: |
            if [ "${CIRCLE_BRANCH}" == "production" ]; then
              bundle exec cap production deploy
            fi
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - run_tests:
          requires:
            - build
