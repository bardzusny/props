version: 2
jobs:
  build:
    working_directory: ~/props
    docker:
      - image: circleci/ruby:2.3-node-browsers
        env:
          - RAILS_ENV=test
          - RACK_ENV=test
          - PG_HOST=localhost
          - PG_USER=ubuntu
      - image: postgres:9.5
        #lub po prostu env:
        environment:
          - POSTGRES_USER=ubuntu
          - POSTGRES_DB=circle_ruby_test
    environment:
      - CHROME_BIN: /usr/bin/google-chrome
      - DISPLAY: :99.0
    steps:
      - checkout
      - run:
          name: Install System Dependencies
          command: sudo apt-get update && sudo apt-get install -y libpq-dev
      - run:
          name: Get Yarn Dependencies
          command: yarn
      - run:
          name: Install Chrome
          command: |
            sudo apt-get update
            sudo apt-get install -y libappindicator1 fonts-liberation
            sudo apt-get install -y gconf-service libasound2 libgconf2-4 libnspr4 libnss3 libpango1.0-0 libx11-xcb1 libxss1 xdg-utils
            sudo wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
            sudo dpkg -i google-chrome-stable_current_amd64.deb; sudo apt-get -fy install
      - run:
          name: Install Xvfb
          command: |
            sudo apt-get update
            sudo apt-get -y install xorg
            sudo apt-get -y install xvfb
            sudo apt-get -y install xfonts-100dpi xfonts-75dpi xfonts-scalable xfonts-cyrillic
      - run:
          name: Install Ruby Dependencies
          command: bundle install
      - run:
          name: Copy database.yml
          command: cp config/database.yml.circleci config/database.yml
      - run:
          name: Create DB
          command: bundle exec rake db:create db:schema:load --trace
      - run:
          name: DB Migrations
          command: bundle exec rake db:migrate
      - run:
          name: Starting Xvfb (for Browser Tests)
          command: Xvfb :99 -screen 0 1280x1024x24
          background: true
      - run:
          name: Run Yarn Tests
          command: yarn test
      - run:
          name: Run Rspec Tests
          command: bundle exec rspec --colour --profile 10 --order rand spec --format progress
      - deploy:
          name: Deploy To Staging
          command: |
            if [ "${CIRCLE_BRANCH}" == "mobile" ]; then
              git push git@heroku.com:netguru-props-staging.git
            fi
      - deploy:
          name: "Deploy to production"
          command: |
            if [ "${CIRCLE_BRANCH}" == "production" ]; then
              bundle exec cap production deploy
            fi
